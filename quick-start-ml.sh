#!/bin/bash
# ===============================================================================
# Quick Start Script - Syst√®me ML CIAPOL Docker
# D√©ploiement et test automatis√© du syst√®me complet
# ===============================================================================

set -e

echo "üöÄ CIAPOL ML System - Quick Start"
echo "=================================="
echo ""

# V√©rification des pr√©requis
echo "üîç V√©rification des pr√©requis..."
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©"
    exit 1
fi

if ! command -v python &> /dev/null; then
    echo "‚ùå Python n'est pas install√©"
    exit 1
fi

echo "‚úÖ Pr√©requis valid√©s"
echo ""

# Option de d√©ploiement
echo "Choisissez une option de d√©ploiement:"
echo "1) D√©ploiement automatis√© complet (recommand√©)"
echo "2) D√©ploiement manuel simple"
echo "3) Tests uniquement (si d√©j√† d√©ploy√©)"
echo "4) Arr√™t des services"
echo ""
read -p "Votre choix (1-4): " choice

case $choice in
    1)
        echo "üîÑ Lancement du d√©ploiement automatis√©..."
        python scripts/deploy-ml-system-docker.py
        
        if [ $? -eq 0 ]; then
            echo ""
            echo "‚úÖ D√©ploiement termin√© avec succ√®s!"
            echo ""
            echo "üß™ Lancement des tests de validation..."
            python scripts/test-ml-system.py
        else
            echo "‚ùå √âchec du d√©ploiement automatis√©"
            exit 1
        fi
        ;;
    
    2)
        echo "üîÑ D√©ploiement manuel simple..."
        
        echo "Arr√™t des services existants..."
        docker-compose down --remove-orphans
        
        echo "Construction des images..."
        docker-compose build
        
        echo "D√©marrage des services..."
        docker-compose up -d
        
        echo "Attente du d√©marrage des services..."
        sleep 30
        
        echo "‚úÖ D√©ploiement manuel termin√©"
        echo ""
        echo "üß™ Lancement des tests de validation..."
        python scripts/test-ml-system.py
        ;;
    
    3)
        echo "üß™ Lancement des tests uniquement..."
        python scripts/test-ml-system.py
        ;;
    
    4)
        echo "‚èπÔ∏è Arr√™t des services..."
        docker-compose down --remove-orphans
        echo "‚úÖ Services arr√™t√©s"
        exit 0
        ;;
    
    *)
        echo "‚ùå Option invalide"
        exit 1
        ;;
esac

# Affichage des informations finales
echo ""
echo "üåê Services disponibles:"
echo "=================================="
echo "‚Ä¢ Frontend:              http://localhost:3000"
echo "‚Ä¢ ML Dataset Generator:  http://localhost:8001" 
echo "‚Ä¢ ML Model Trainer:      http://localhost:8002"
echo "‚Ä¢ ML Predictor:          http://localhost:8003"
echo "‚Ä¢ StarRocks API:         http://localhost:8000"
echo "‚Ä¢ StarRocks:             http://localhost:8030"
echo "‚Ä¢ ClearML:               http://localhost:8080"
echo "‚Ä¢ DolphinScheduler:      http://localhost:12345"
echo "‚Ä¢ SeaTunnel:             http://localhost:5801"
echo "‚Ä¢ Pulsar:                http://localhost:3002"
echo ""

echo "üìö Documentation:"
echo "‚Ä¢ Guide complet: README-ML-DOCKER.md"
echo "‚Ä¢ Tests: python scripts/test-ml-system.py"
echo "‚Ä¢ Statut: docker-compose ps"
echo "‚Ä¢ Logs: docker-compose logs -f [service]"
echo ""

echo "üéâ Syst√®me ML CIAPOL op√©rationnel!"
echo "Utilisez Ctrl+C pour quitter ce script."
echo ""

# Option de monitoring en temps r√©el
read -p "Voulez-vous afficher les logs en temps r√©el? (y/N): " monitor

if [[ $monitor =~ ^[Yy]$ ]]; then
    echo "üìä Monitoring des services (Ctrl+C pour quitter)..."
    docker-compose logs -f
fi